"""
Django settings for newone project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path #то за счет чего получаем путь к файлу
import os, sys #

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent #дает путь к папке с manage.py
#сейчас basedir C:\Users\moipo\Desktop\lwcounter\newone


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-os821%%oms#-p1l8*^zasd=)p9+n5l_ks56@0806*)gym0w#ui8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True #продакшн - False

ALLOWED_HOSTS = [] #те домены, на которых может быть расположен сайт (базовые не указаны)
#Хочешь выложить на pthonanywhere.com - указываешь его в списке.

# Application definition

INSTALLED_APPS = [ # встроенные приложения (логика и операции т.е. скорее КОМПОНЕНТЫ) и твои приложения
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', #отвечает за подключение статических файлов
    'myapp',
]

MIDDLEWARE = [ #обработка запросов клиентов (requests)
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'newone.urls'
# Root - самая корневая папка проекта(base dir)
# URLCONF = urlmapping

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'], #2 показываем где нами созданные шаблоны
        #то же что [os.path.join(BASE_DIR, "templates")] - просто строку  в списке возвращает
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'newone.wsgi.application'
#web server geteway(врата) interface

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = { #подключение к БД     по умолчанию стоит sqlite3, но можно и другие сделать.
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [ #хорошие ли пароли
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/' #имя папки, в которой ищем статик файлы
#STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
